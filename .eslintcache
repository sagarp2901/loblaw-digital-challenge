[{"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/index.js":"1","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/App.js":"2","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/reportWebVitals.js":"3","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Recipies/Recipies.js":"4","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/services/RecipesService.js":"5","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Meals/Meals.js":"6","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/RecipeDetail/RecipeDetail.js":"7"},{"size":500,"mtime":1607996402173,"results":"8","hashOfConfig":"9"},{"size":530,"mtime":1608007463222,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607996402176,"results":"11","hashOfConfig":"9"},{"size":1810,"mtime":1608084682633,"results":"12","hashOfConfig":"9"},{"size":742,"mtime":1607998458453,"results":"13","hashOfConfig":"9"},{"size":1030,"mtime":1608007722413,"results":"14","hashOfConfig":"9"},{"size":934,"mtime":1608008080716,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"d9r5l1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/index.js",[],["33","34"],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/App.js",[],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/reportWebVitals.js",[],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Recipies/Recipies.js",["35","36"],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/services/RecipesService.js",[],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Meals/Meals.js",["37","38","39"],"import React, {useState, useEffect} from 'react';\n// import PropTypes from 'prop-types';\nimport './Meals.scss';\nimport {getAllRecipesInCategory} from '../../services/RecipesService';\nimport {useLocation, useHistory} from 'react-router-dom';\n\nconst Meals = ({meals}) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    if(location.state) {\n      getAllRecipesInCategory(location.state.category).then(res => {\n        console.log('Items', res);\n      }).catch(err=> {\n        console.log(err);\n      });\n    }\n  }, []);\n\n  const goToDetail = (meal) => {\n    history.push('recipe-detail', {detailId: meal.idMeal});\n  }\n\n  return (\n    <div className=\"Meals\" data-testid=\"Meals\">\n      {meals.map((meal, index)=> (\n        <div key={index} className=\"meal-container\" onClick={() => goToDetail(meal)}>\n          <img src={meal.strMealThumb}/>\n          <div>{meal.strMeal}</div>\n        </div>\n      ))}\n    </div>\n)};\n\nMeals.propTypes = {};\n\nMeals.defaultProps = {};\n\nexport default Meals;\n","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/RecipeDetail/RecipeDetail.js",["40","41"],"import React, {useEffect, useState} from 'react';\n// import PropTypes from 'prop-types';\nimport './RecipeDetail.scss';\nimport {useLocation} from 'react-router-dom';\nimport {getRecipeById} from '../../services/RecipesService';\n\nconst RecipeDetail = () => {\n  const location = useLocation();\n  const [mealDetail, setMealDetail] = useState(null);\n  useEffect(() => {\n    if(location.state) {\n      getRecipeById(location.state.detailId).then(res => {\n        console.log('Meal Details', res);\n        setMealDetail(res.meals[0]);\n      }).catch(err=> {\n        console.log(err);\n      });\n    }\n  }, []);\n\n  return (\n  <div className=\"RecipeDetail\" data-testid=\"RecipeDetail\">\n    {mealDetail && <div className=\"detail-container\">\n      <h2>{mealDetail.strMeal}</h2>\n      \n      <img src={mealDetail.strMealThumb}/>\n      </div>}\n  </div>\n)};\n\nRecipeDetail.propTypes = {};\n\nRecipeDetail.defaultProps = {};\n\nexport default RecipeDetail;\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":21,"nodeType":"48","messageId":"49","endLine":4,"endColumn":25},{"ruleId":"46","severity":1,"message":"50","line":8,"column":9,"nodeType":"48","messageId":"49","endLine":8,"endColumn":16},{"ruleId":"46","severity":1,"message":"51","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":24},{"ruleId":"52","severity":1,"message":"53","line":19,"column":6,"nodeType":"54","endLine":19,"endColumn":8,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":29,"column":11,"nodeType":"58","endLine":29,"endColumn":41},{"ruleId":"52","severity":1,"message":"53","line":19,"column":6,"nodeType":"54","endLine":19,"endColumn":8,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"57","line":26,"column":7,"nodeType":"58","endLine":26,"endColumn":43},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.","ArrayExpression",["62"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"64","fix":"66"},"Update the dependencies array to be: [location.state]",{"range":"67","text":"68"},{"range":"69","text":"68"},[557,559],"[location.state]",[597,599]]
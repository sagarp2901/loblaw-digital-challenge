[{"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/index.js":"1","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/App.js":"2","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/reportWebVitals.js":"3","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Recipies/Recipies.js":"4","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/services/RecipesService.js":"5","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Meals/Meals.js":"6","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/RecipeDetail/RecipeDetail.js":"7"},{"size":500,"mtime":1607996402173,"results":"8","hashOfConfig":"9"},{"size":530,"mtime":1608007463222,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1607996402176,"results":"11","hashOfConfig":"9"},{"size":1105,"mtime":1608096284460,"results":"12","hashOfConfig":"9"},{"size":742,"mtime":1607998458453,"results":"13","hashOfConfig":"9"},{"size":2174,"mtime":1608096426978,"results":"14","hashOfConfig":"9"},{"size":2254,"mtime":1608099658634,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"d9r5l1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/index.js",[],["32","33"],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/App.js",[],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/reportWebVitals.js",[],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Recipies/Recipies.js",[],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/services/RecipesService.js",[],"/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/Meals/Meals.js",["34","35"],"import React, {useState, useEffect} from 'react';\n// import PropTypes from 'prop-types';\nimport './Meals.scss';\nimport {getAllRecipesInCategory} from '../../services/RecipesService';\nimport {useLocation, useHistory} from 'react-router-dom';\nimport { Accordion, Card, Button } from 'react-bootstrap'\nimport { FaChevronDown, FaChevronRight } from 'react-icons/fa';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Meals = ({category}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [meals, setMeals] = useState([]);\n  const [isOpen, setOpen] = useState(false);\n\n  useEffect(() => {\n    if(location.state) {\n      getAllRecipesInCategory(category).then(res => {\n        console.log('Items', res);\n      }).catch(err=> {\n        console.log(err);\n      });\n    }\n  }, []);\n\n  const getRecipes = () => {\n    setOpen(!isOpen);\n    if(meals.length) return;\n    // Make call only once\n    getAllRecipesInCategory(category).then(res => {\n      console.log('Items', res);\n      setMeals(res.meals);\n    }).catch(err=> {\n      console.log(err);\n    });\n  }\n\n  const goToDetail = (meal) => {\n    history.push('recipe-detail', {detailId: meal.idMeal});\n  }\n\n  return (\n    <div className=\"Meals\" data-testid=\"Meals\">\n       <Card>\n      <Accordion>\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\" onClick={getRecipes}>\n            <Button variant=\"light\" className=\"toggle-recipe-btn\" onClick={getRecipes}>\n            {isOpen? <FaChevronDown className=\"chevron\"/>: <FaChevronRight className=\"chevron\"/>}Checkout {category} Recipes\n            </Button>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              {meals && meals.map((meal, index)=> (\n                <div key={index} className=\"meal-container\" onClick={() => goToDetail(meal)}>\n                  <img src={meal.strMealThumb}/>\n                  <div>{meal.strMeal}</div>\n                </div>\n              ))}\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      </Card>\n    </div>\n)};\n\nMeals.propTypes = {};\n\nMeals.defaultProps = {};\n\nexport default Meals;\n","/Users/sagarpatel/Code/React/loblaw-digital-challenge/src/components/RecipeDetail/RecipeDetail.js",["36","37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":24,"column":6,"nodeType":"46","endLine":24,"endColumn":8,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":56,"column":19,"nodeType":"50","endLine":56,"endColumn":49},{"ruleId":"51","severity":1,"message":"52","line":13,"column":10,"nodeType":"53","messageId":"54","endLine":13,"endColumn":20},{"ruleId":"51","severity":1,"message":"55","line":13,"column":22,"nodeType":"53","messageId":"54","endLine":13,"endColumn":35},{"ruleId":"44","severity":1,"message":"56","line":25,"column":6,"nodeType":"46","endLine":25,"endColumn":8,"suggestions":"57"},{"ruleId":"48","severity":1,"message":"49","line":47,"column":9,"nodeType":"50","endLine":47,"endColumn":45},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["60"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'youtubeUrl' is assigned a value but never used.","Identifier","unusedVar","'setYoutubeUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},"Update the dependencies array to be: [category, location.state]",{"range":"66","text":"67"},"Update the dependencies array to be: [location.state]",{"range":"68","text":"69"},[801,803],"[category, location.state]",[891,893],"[location.state]"]